#!/usr/bin/env bash

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd)"
PARENT_DIR="$(dirname "$SCRIPT_DIR")"

# Source utils and consts from parent directory
source "$PARENT_DIR/utils"
source "$PARENT_DIR/consts"

if [ "$1" == "--version" ]; then
    echo "glogm version 1.2"
    echo "https://github.com/DanielKag/glogm"
    exit 0
fi

# Function to handle actions on a selected commit
handle_commit_actions() {
    local commit_hash="$1"

    # Get commit details
    local author=$(git show -s --format='%an' $commit_hash)
    local commit_date=$(git show -s --format='%cr' $commit_hash)
    local commit_message=$(git show -s --format='%s' $commit_hash)

    # Create a single line header with commit details, matching log colors
    # Bold dim cyan for hash, Green for date, Bold blue for author
    local header_text="${CYAN}${commit_hash}${NORMAL} ${GREEN}${commit_date}${NORMAL} ${BOLD}${BLUE}${author}${NORMAL} ${commit_message}"

    # Create temporary file for the menu
    local temp_menu=$(mktemp)
    # Add separator
    echo -e "----------------------------------------" >"$temp_menu"
    echo -e "${BLUE}Open in Github${NORMAL}" >>"$temp_menu"
    echo -e "${GREEN}Copy commit hash${NORMAL}" >>"$temp_menu"
    echo -e "${YELLOW}Revert commit${NORMAL}" >>"$temp_menu"

    # Create preview command to show the commit diff
    local preview_cmd="git show --color=always $commit_hash | delta"

    # Show the action menu with fzf
    local action=$(cat "$temp_menu" | fzf --ansi \
        --no-multi \
        --header="$header_text" \
        --header-lines=1 \
        --preview="$preview_cmd" \
        --preview-window=right:60% \
        --bind="esc:abort")

    # Clean up
    rm "$temp_menu"

    # If ESC was pressed (no selection), return to main log
    if [ -z "$action" ]; then
        show_log
        return
    fi

    # Process the selected action
    if [[ "$action" == *"Open in Github"* ]]; then
        # Open in Github
        openGithubCommitOnRemote <<<"$commit_hash"
    elif [[ "$action" == *"Copy commit hash"* ]]; then
        # Copy commit hash to clipboard
        echo -n "$commit_hash" | pbcopy
        echo "${GREEN}✓${NORMAL} Commit hash copied to clipboard: $commit_hash"
    elif [[ "$action" == *"Revert commit"* ]]; then
        # Create revert command and copy to clipboard
        local revert_cmd="git revert $commit_hash"
        echo -n "$revert_cmd" | pbcopy
        echo "${YELLOW}!${NORMAL} Revert command copied to clipboard: $revert_cmd"
        echo "Paste and run the command to revert the commit."
    fi
}

# Main log view function
show_log() {
    base_branch=$(git_main_branch)
    remote_base_branch="origin/$base_branch"
    current_branch=$(git rev-parse --abbrev-ref HEAD)

    command_head="git -c color.ui=always log HEAD \
                --decorate-refs-exclude=refs/tags --abbrev-commit \
                --pretty=format:'%C(bold dim cyan)%h%Creset %Cgreen%<(13)%cr%Creset %C(bold blue)%<(16)%an%Creset %s %C(auto)%d%Creset'"

    command_master="git -c color.ui=always log $remote_base_branch \
                --decorate-refs-exclude=refs/tags --abbrev-commit \
                --pretty=format:'%C(bold dim cyan)%h%Creset %Cgreen%<(13)%cr%Creset %C(bold blue)%<(16)%an%Creset %s %C(auto)%d%Creset'"

    header=$(printf "<Tab>    Toggle commit diff\n<Enter>  Show action menu\n<R> Refresh\n← →      Choose branch")
    head_prompt="${INVERT}${current_branch} (HEAD) ${NORMAL} ${remote_base_branch}"
    base_prompt="${current_branch} (HEAD) ${INVERT}${remote_base_branch}${NORMAL}"

    # Get selected commit
    selected_commit=$(eval "echo '$head_prompt'; $command_head" |
        fzf --ansi --no-sort --exact \
            --header "$header" \
            --header-lines=1 \
            --reverse \
            --bind='tab:toggle-preview' \
            --bind "R:reload(git fetch && echo '$base_prompt'; $command_master)" \
            --bind "left:reload(echo '$head_prompt'; $command_head)" \
            --bind "right:reload(echo '$base_prompt'; $command_master)" \
            --preview-window right \
            --preview-window hidden \
            --preview 'git show {1} | delta' |
        cut -d\  -f 1)

    # If a commit was selected, handle actions
    if [ -n "$selected_commit" ]; then
        handle_commit_actions "$selected_commit"
    fi
}

# Start the log view
show_log
