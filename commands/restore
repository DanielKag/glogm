#!/usr/bin/env bash

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" &> /dev/null && pwd)"
PARENT_DIR="$(dirname "$SCRIPT_DIR")"

# Source utils and consts from parent directory
source "$PARENT_DIR/utils"
source "$PARENT_DIR/consts"

# Get the default branch name (usually master or main)
main_branch=$(git_main_branch)

# Show usage if no path is provided
show_usage() {
  echo "Usage: glogm restore <path>"
  echo ""
  echo "Restores a file to the version from the $main_branch branch."
  echo "Example: glogm restore src/file.js"
  echo ""
  exit 1
}

# Check if a path argument was provided
if [ -z "$1" ]; then
  show_usage
fi

path="$1"

# Check if the file exists in the repository
if ! git ls-files --error-unmatch "$path" &>/dev/null; then
  echo "${RED}Error:${NORMAL} File '$path' does not exist in the repository."
  exit 1
fi

# Restore the file from master
echo "Restoring '$path' from origin/$main_branch..."
git checkout "origin/$main_branch" -- "$path"

# Check if the restore was successful
if [ $? -eq 0 ]; then
  echo "${GREEN}âœ“${NORMAL} Successfully restored '$path' from origin/$main_branch!"
else
  echo "${RED}Error:${NORMAL} Failed to restore '$path' from origin/$main_branch."
  exit 1
fi 